import * as $protobuf from "protobufjs";

/** Namespace events. */
export namespace events {

    /** Properties of a Core. */
    interface ICore {

        /**
         * Read-only and auto-generated. ID of the message, ID is a uuid v4 auto-generated by messaging library.
         * It will be propagate through the system. Similar to correlationId
         */
        id?: (string|null);

        /** The name of the event is */
        name?: (string|null);

        /** Core timestamp */
        timestamp?: (string|null);

        /** Core type */
        type?: (string|null);

        /** Core serviceName */
        serviceName?: (string|null);

        /** Core applicationId */
        applicationId?: (string|null);

        /** Core eventId */
        eventId?: (string|null);

        /** Core organizationId */
        organizationId?: (string|null);

        /** Core userId */
        userId?: (string|null);

        /** Core tokenId */
        tokenId?: (string|null);
    }

    /** Represents a Core. */
    class Core implements ICore {

        /**
         * Constructs a new Core.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.ICore);

        /**
         * Read-only and auto-generated. ID of the message, ID is a uuid v4 auto-generated by messaging library.
         * It will be propagate through the system. Similar to correlationId
         */
        public id: string;

        /** The name of the event is */
        public name: string;

        /** Core timestamp. */
        public timestamp: string;

        /** Core type. */
        public type: string;

        /** Core serviceName. */
        public serviceName: string;

        /** Core applicationId. */
        public applicationId: string;

        /** Core eventId. */
        public eventId: string;

        /** Core organizationId. */
        public organizationId: string;

        /** Core userId. */
        public userId: string;

        /** Core tokenId. */
        public tokenId: string;

        /**
         * Creates a new Core instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Core instance
         */
        public static create(properties?: events.ICore): events.Core;

        /**
         * Encodes the specified Core message. Does not implicitly {@link events.Core.verify|verify} messages.
         * @param message Core message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.ICore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Core message, length delimited. Does not implicitly {@link events.Core.verify|verify} messages.
         * @param message Core message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.ICore, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Core message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Core
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.Core;

        /**
         * Decodes a Core message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Core
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.Core;

        /**
         * Verifies a Core message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Core message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Core
         */
        public static fromObject(object: { [k: string]: any }): events.Core;

        /**
         * Creates a plain object from a Core message. Also converts values to other types if specified.
         * @param message Core
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.Core, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Core to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Trace. */
    interface ITrace {

        /** Open Tracing trace context. */
        traceContext?: ({ [k: string]: string }|null);

        /** Open Tracing trace context. */
        traceTags?: ({ [k: string]: string }|null);

        /** Trace serviceName */
        serviceName?: (string|null);
    }

    /** Represents a Trace. */
    class Trace implements ITrace {

        /**
         * Constructs a new Trace.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.ITrace);

        /** Open Tracing trace context. */
        public traceContext: { [k: string]: string };

        /** Open Tracing trace context. */
        public traceTags: { [k: string]: string };

        /** Trace serviceName. */
        public serviceName: string;

        /**
         * Creates a new Trace instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Trace instance
         */
        public static create(properties?: events.ITrace): events.Trace;

        /**
         * Encodes the specified Trace message. Does not implicitly {@link events.Trace.verify|verify} messages.
         * @param message Trace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.ITrace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Trace message, length delimited. Does not implicitly {@link events.Trace.verify|verify} messages.
         * @param message Trace message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.ITrace, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Trace message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Trace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.Trace;

        /**
         * Decodes a Trace message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Trace
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.Trace;

        /**
         * Verifies a Trace message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Trace message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Trace
         */
        public static fromObject(object: { [k: string]: any }): events.Trace;

        /**
         * Creates a plain object from a Trace message. Also converts values to other types if specified.
         * @param message Trace
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.Trace, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Trace to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a VtEvent. */
    interface IVtEvent {

        /** VtEvent core */
        core?: (events.ICore|null);

        /** VtEvent trace */
        trace?: (events.ITrace|null);

        /** VtEvent baggage */
        baggage?: ({ [k: string]: string }|null);

        /** VtEvent data */
        data?: (google.protobuf.IAny|null);
    }

    /** Represents a VtEvent. */
    class VtEvent implements IVtEvent {

        /**
         * Constructs a new VtEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IVtEvent);

        /** VtEvent core. */
        public core?: (events.ICore|null);

        /** VtEvent trace. */
        public trace?: (events.ITrace|null);

        /** VtEvent baggage. */
        public baggage: { [k: string]: string };

        /** VtEvent data. */
        public data?: (google.protobuf.IAny|null);

        /**
         * Creates a new VtEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns VtEvent instance
         */
        public static create(properties?: events.IVtEvent): events.VtEvent;

        /**
         * Encodes the specified VtEvent message. Does not implicitly {@link events.VtEvent.verify|verify} messages.
         * @param message VtEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IVtEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified VtEvent message, length delimited. Does not implicitly {@link events.VtEvent.verify|verify} messages.
         * @param message VtEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IVtEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a VtEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns VtEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.VtEvent;

        /**
         * Decodes a VtEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns VtEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.VtEvent;

        /**
         * Verifies a VtEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a VtEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns VtEvent
         */
        public static fromObject(object: { [k: string]: any }): events.VtEvent;

        /**
         * Creates a plain object from a VtEvent message. Also converts values to other types if specified.
         * @param message VtEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.VtEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this VtEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EngineBuildApproved. */
    interface IEngineBuildApproved {

        /** EngineBuildApproved userId */
        userId?: (string|null);

        /** EngineBuildApproved engineId */
        engineId?: (string|null);

        /** EngineBuildApproved buildId */
        buildId?: (string|null);

        /** EngineBuildApproved organizationId */
        organizationId?: (number|Long|null);

        /** EngineBuildApproved statusCode */
        statusCode?: (number|null);

        /** EngineBuildApproved action */
        action?: (string|null);
    }

    /** Represents an EngineBuildApproved. */
    class EngineBuildApproved implements IEngineBuildApproved {

        /**
         * Constructs a new EngineBuildApproved.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IEngineBuildApproved);

        /** EngineBuildApproved userId. */
        public userId: string;

        /** EngineBuildApproved engineId. */
        public engineId: string;

        /** EngineBuildApproved buildId. */
        public buildId: string;

        /** EngineBuildApproved organizationId. */
        public organizationId: (number|Long);

        /** EngineBuildApproved statusCode. */
        public statusCode: number;

        /** EngineBuildApproved action. */
        public action: string;

        /**
         * Creates a new EngineBuildApproved instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EngineBuildApproved instance
         */
        public static create(properties?: events.IEngineBuildApproved): events.EngineBuildApproved;

        /**
         * Encodes the specified EngineBuildApproved message. Does not implicitly {@link events.EngineBuildApproved.verify|verify} messages.
         * @param message EngineBuildApproved message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IEngineBuildApproved, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EngineBuildApproved message, length delimited. Does not implicitly {@link events.EngineBuildApproved.verify|verify} messages.
         * @param message EngineBuildApproved message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IEngineBuildApproved, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EngineBuildApproved message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EngineBuildApproved
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.EngineBuildApproved;

        /**
         * Decodes an EngineBuildApproved message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EngineBuildApproved
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.EngineBuildApproved;

        /**
         * Verifies an EngineBuildApproved message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EngineBuildApproved message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EngineBuildApproved
         */
        public static fromObject(object: { [k: string]: any }): events.EngineBuildApproved;

        /**
         * Creates a plain object from an EngineBuildApproved message. Also converts values to other types if specified.
         * @param message EngineBuildApproved
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.EngineBuildApproved, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EngineBuildApproved to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExampleEvent. */
    interface IExampleEvent {

        /** ExampleEvent core */
        core?: (events.ICore|null);

        /** ExampleEvent firstName */
        firstName?: (string|null);

        /** ExampleEvent lastName */
        lastName?: (string|null);
    }

    /** Represents an ExampleEvent. */
    class ExampleEvent implements IExampleEvent {

        /**
         * Constructs a new ExampleEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IExampleEvent);

        /** ExampleEvent core. */
        public core?: (events.ICore|null);

        /** ExampleEvent firstName. */
        public firstName: string;

        /** ExampleEvent lastName. */
        public lastName: string;

        /**
         * Creates a new ExampleEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExampleEvent instance
         */
        public static create(properties?: events.IExampleEvent): events.ExampleEvent;

        /**
         * Encodes the specified ExampleEvent message. Does not implicitly {@link events.ExampleEvent.verify|verify} messages.
         * @param message ExampleEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IExampleEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExampleEvent message, length delimited. Does not implicitly {@link events.ExampleEvent.verify|verify} messages.
         * @param message ExampleEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IExampleEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExampleEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExampleEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.ExampleEvent;

        /**
         * Decodes an ExampleEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExampleEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.ExampleEvent;

        /**
         * Verifies an ExampleEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExampleEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExampleEvent
         */
        public static fromObject(object: { [k: string]: any }): events.ExampleEvent;

        /**
         * Creates a plain object from an ExampleEvent message. Also converts values to other types if specified.
         * @param message ExampleEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.ExampleEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExampleEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExampleOne. */
    interface IExampleOne {

        /** ExampleOne data */
        data?: (string|null);
    }

    /** Represents an ExampleOne. */
    class ExampleOne implements IExampleOne {

        /**
         * Constructs a new ExampleOne.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IExampleOne);

        /** ExampleOne data. */
        public data: string;

        /**
         * Creates a new ExampleOne instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExampleOne instance
         */
        public static create(properties?: events.IExampleOne): events.ExampleOne;

        /**
         * Encodes the specified ExampleOne message. Does not implicitly {@link events.ExampleOne.verify|verify} messages.
         * @param message ExampleOne message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IExampleOne, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExampleOne message, length delimited. Does not implicitly {@link events.ExampleOne.verify|verify} messages.
         * @param message ExampleOne message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IExampleOne, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExampleOne message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExampleOne
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.ExampleOne;

        /**
         * Decodes an ExampleOne message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExampleOne
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.ExampleOne;

        /**
         * Verifies an ExampleOne message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExampleOne message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExampleOne
         */
        public static fromObject(object: { [k: string]: any }): events.ExampleOne;

        /**
         * Creates a plain object from an ExampleOne message. Also converts values to other types if specified.
         * @param message ExampleOne
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.ExampleOne, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExampleOne to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExampleTwo. */
    interface IExampleTwo {

        /** ExampleTwo number */
        number?: (number|Long|null);
    }

    /** Represents an ExampleTwo. */
    class ExampleTwo implements IExampleTwo {

        /**
         * Constructs a new ExampleTwo.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IExampleTwo);

        /** ExampleTwo number. */
        public number: (number|Long);

        /**
         * Creates a new ExampleTwo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExampleTwo instance
         */
        public static create(properties?: events.IExampleTwo): events.ExampleTwo;

        /**
         * Encodes the specified ExampleTwo message. Does not implicitly {@link events.ExampleTwo.verify|verify} messages.
         * @param message ExampleTwo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IExampleTwo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExampleTwo message, length delimited. Does not implicitly {@link events.ExampleTwo.verify|verify} messages.
         * @param message ExampleTwo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IExampleTwo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExampleTwo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExampleTwo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.ExampleTwo;

        /**
         * Decodes an ExampleTwo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExampleTwo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.ExampleTwo;

        /**
         * Verifies an ExampleTwo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExampleTwo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExampleTwo
         */
        public static fromObject(object: { [k: string]: any }): events.ExampleTwo;

        /**
         * Creates a plain object from an ExampleTwo message. Also converts values to other types if specified.
         * @param message ExampleTwo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.ExampleTwo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExampleTwo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExampleThree. */
    interface IExampleThree {

        /** ExampleThree boolean */
        boolean?: (boolean|null);
    }

    /** Represents an ExampleThree. */
    class ExampleThree implements IExampleThree {

        /**
         * Constructs a new ExampleThree.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IExampleThree);

        /** ExampleThree boolean. */
        public boolean: boolean;

        /**
         * Creates a new ExampleThree instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExampleThree instance
         */
        public static create(properties?: events.IExampleThree): events.ExampleThree;

        /**
         * Encodes the specified ExampleThree message. Does not implicitly {@link events.ExampleThree.verify|verify} messages.
         * @param message ExampleThree message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IExampleThree, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExampleThree message, length delimited. Does not implicitly {@link events.ExampleThree.verify|verify} messages.
         * @param message ExampleThree message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IExampleThree, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExampleThree message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExampleThree
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.ExampleThree;

        /**
         * Decodes an ExampleThree message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExampleThree
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.ExampleThree;

        /**
         * Verifies an ExampleThree message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExampleThree message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExampleThree
         */
        public static fromObject(object: { [k: string]: any }): events.ExampleThree;

        /**
         * Creates a plain object from an ExampleThree message. Also converts values to other types if specified.
         * @param message ExampleThree
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.ExampleThree, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExampleThree to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an ExampleFour. */
    interface IExampleFour {

        /** ExampleFour data */
        data?: (string|null);

        /** ExampleFour number */
        number?: (number|Long|null);

        /** ExampleFour boolean */
        boolean?: (boolean|null);
    }

    /** Represents an ExampleFour. */
    class ExampleFour implements IExampleFour {

        /**
         * Constructs a new ExampleFour.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IExampleFour);

        /** ExampleFour data. */
        public data: string;

        /** ExampleFour number. */
        public number: (number|Long);

        /** ExampleFour boolean. */
        public boolean: boolean;

        /**
         * Creates a new ExampleFour instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ExampleFour instance
         */
        public static create(properties?: events.IExampleFour): events.ExampleFour;

        /**
         * Encodes the specified ExampleFour message. Does not implicitly {@link events.ExampleFour.verify|verify} messages.
         * @param message ExampleFour message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IExampleFour, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ExampleFour message, length delimited. Does not implicitly {@link events.ExampleFour.verify|verify} messages.
         * @param message ExampleFour message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IExampleFour, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an ExampleFour message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ExampleFour
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.ExampleFour;

        /**
         * Decodes an ExampleFour message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ExampleFour
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.ExampleFour;

        /**
         * Verifies an ExampleFour message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an ExampleFour message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ExampleFour
         */
        public static fromObject(object: { [k: string]: any }): events.ExampleFour;

        /**
         * Creates a plain object from an ExampleFour message. Also converts values to other types if specified.
         * @param message ExampleFour
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.ExampleFour, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ExampleFour to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MentionModifiedData. */
    interface IMentionModifiedData {

        /** MentionModifiedData mentionId */
        mentionId?: (number|Long|null);

        /** MentionModifiedData organizationId */
        organizationId?: (number|Long|null);

        /** MentionModifiedData mentionDate */
        mentionDate?: (string|null);

        /** MentionModifiedData transactionTimestamp */
        transactionTimestamp?: (string|null);
    }

    /** Represents a MentionModifiedData. */
    class MentionModifiedData implements IMentionModifiedData {

        /**
         * Constructs a new MentionModifiedData.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IMentionModifiedData);

        /** MentionModifiedData mentionId. */
        public mentionId: (number|Long);

        /** MentionModifiedData organizationId. */
        public organizationId: (number|Long);

        /** MentionModifiedData mentionDate. */
        public mentionDate: string;

        /** MentionModifiedData transactionTimestamp. */
        public transactionTimestamp: string;

        /**
         * Creates a new MentionModifiedData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MentionModifiedData instance
         */
        public static create(properties?: events.IMentionModifiedData): events.MentionModifiedData;

        /**
         * Encodes the specified MentionModifiedData message. Does not implicitly {@link events.MentionModifiedData.verify|verify} messages.
         * @param message MentionModifiedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IMentionModifiedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MentionModifiedData message, length delimited. Does not implicitly {@link events.MentionModifiedData.verify|verify} messages.
         * @param message MentionModifiedData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IMentionModifiedData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MentionModifiedData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MentionModifiedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionModifiedData;

        /**
         * Decodes a MentionModifiedData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MentionModifiedData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionModifiedData;

        /**
         * Verifies a MentionModifiedData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MentionModifiedData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MentionModifiedData
         */
        public static fromObject(object: { [k: string]: any }): events.MentionModifiedData;

        /**
         * Creates a plain object from a MentionModifiedData message. Also converts values to other types if specified.
         * @param message MentionModifiedData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.MentionModifiedData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MentionModifiedData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MentionUpdated. */
    interface IMentionUpdated {

        /** MentionUpdated event */
        event?: (string|null);

        /** MentionUpdated type */
        type?: (string|null);

        /** MentionUpdated payload */
        payload?: (events.IMentionModifiedData|null);
    }

    /** Represents a MentionUpdated. */
    class MentionUpdated implements IMentionUpdated {

        /**
         * Constructs a new MentionUpdated.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IMentionUpdated);

        /** MentionUpdated event. */
        public event: string;

        /** MentionUpdated type. */
        public type: string;

        /** MentionUpdated payload. */
        public payload?: (events.IMentionModifiedData|null);

        /**
         * Creates a new MentionUpdated instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MentionUpdated instance
         */
        public static create(properties?: events.IMentionUpdated): events.MentionUpdated;

        /**
         * Encodes the specified MentionUpdated message. Does not implicitly {@link events.MentionUpdated.verify|verify} messages.
         * @param message MentionUpdated message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IMentionUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MentionUpdated message, length delimited. Does not implicitly {@link events.MentionUpdated.verify|verify} messages.
         * @param message MentionUpdated message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IMentionUpdated, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MentionUpdated message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MentionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionUpdated;

        /**
         * Decodes a MentionUpdated message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MentionUpdated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionUpdated;

        /**
         * Verifies a MentionUpdated message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MentionUpdated message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MentionUpdated
         */
        public static fromObject(object: { [k: string]: any }): events.MentionUpdated;

        /**
         * Creates a plain object from a MentionUpdated message. Also converts values to other types if specified.
         * @param message MentionUpdated
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.MentionUpdated, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MentionUpdated to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MentionDeleted. */
    interface IMentionDeleted {

        /** MentionDeleted event */
        event?: (string|null);

        /** MentionDeleted type */
        type?: (string|null);

        /** MentionDeleted payload */
        payload?: (events.IMentionModifiedData|null);
    }

    /** Represents a MentionDeleted. */
    class MentionDeleted implements IMentionDeleted {

        /**
         * Constructs a new MentionDeleted.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IMentionDeleted);

        /** MentionDeleted event. */
        public event: string;

        /** MentionDeleted type. */
        public type: string;

        /** MentionDeleted payload. */
        public payload?: (events.IMentionModifiedData|null);

        /**
         * Creates a new MentionDeleted instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MentionDeleted instance
         */
        public static create(properties?: events.IMentionDeleted): events.MentionDeleted;

        /**
         * Encodes the specified MentionDeleted message. Does not implicitly {@link events.MentionDeleted.verify|verify} messages.
         * @param message MentionDeleted message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IMentionDeleted, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MentionDeleted message, length delimited. Does not implicitly {@link events.MentionDeleted.verify|verify} messages.
         * @param message MentionDeleted message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IMentionDeleted, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MentionDeleted message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MentionDeleted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionDeleted;

        /**
         * Decodes a MentionDeleted message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MentionDeleted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionDeleted;

        /**
         * Verifies a MentionDeleted message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MentionDeleted message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MentionDeleted
         */
        public static fromObject(object: { [k: string]: any }): events.MentionDeleted;

        /**
         * Creates a plain object from a MentionDeleted message. Also converts values to other types if specified.
         * @param message MentionDeleted
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.MentionDeleted, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MentionDeleted to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MentionInserted. */
    interface IMentionInserted {

        /** MentionInserted event */
        event?: (string|null);

        /** MentionInserted type */
        type?: (string|null);

        /** MentionInserted payload */
        payload?: (events.IMentionModifiedData|null);
    }

    /** Represents a MentionInserted. */
    class MentionInserted implements IMentionInserted {

        /**
         * Constructs a new MentionInserted.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IMentionInserted);

        /** MentionInserted event. */
        public event: string;

        /** MentionInserted type. */
        public type: string;

        /** MentionInserted payload. */
        public payload?: (events.IMentionModifiedData|null);

        /**
         * Creates a new MentionInserted instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MentionInserted instance
         */
        public static create(properties?: events.IMentionInserted): events.MentionInserted;

        /**
         * Encodes the specified MentionInserted message. Does not implicitly {@link events.MentionInserted.verify|verify} messages.
         * @param message MentionInserted message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IMentionInserted, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MentionInserted message, length delimited. Does not implicitly {@link events.MentionInserted.verify|verify} messages.
         * @param message MentionInserted message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IMentionInserted, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MentionInserted message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MentionInserted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionInserted;

        /**
         * Decodes a MentionInserted message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MentionInserted
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionInserted;

        /**
         * Verifies a MentionInserted message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MentionInserted message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MentionInserted
         */
        public static fromObject(object: { [k: string]: any }): events.MentionInserted;

        /**
         * Creates a plain object from a MentionInserted message. Also converts values to other types if specified.
         * @param message MentionInserted
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.MentionInserted, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MentionInserted to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MentionEmailGenerated. */
    interface IMentionEmailGenerated {

        /** MentionEmailGenerated event */
        event?: (string|null);

        /** MentionEmailGenerated type */
        type?: (string|null);

        /** MentionEmailGenerated serviceName */
        serviceName?: (string|null);

        /** MentionEmailGenerated toEmail */
        toEmail?: (string|null);

        /** MentionEmailGenerated fromEmail */
        fromEmail?: (string|null);

        /** MentionEmailGenerated fromName */
        fromName?: (string|null);

        /** MentionEmailGenerated template */
        template?: (string|null);

        /** MentionEmailGenerated placeHolders */
        placeHolders?: (events.MentionEmailGenerated.IPlaceHolders|null);

        /** MentionEmailGenerated mergeLanguage */
        mergeLanguage?: (string|null);
    }

    /** Represents a MentionEmailGenerated. */
    class MentionEmailGenerated implements IMentionEmailGenerated {

        /**
         * Constructs a new MentionEmailGenerated.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IMentionEmailGenerated);

        /** MentionEmailGenerated event. */
        public event: string;

        /** MentionEmailGenerated type. */
        public type: string;

        /** MentionEmailGenerated serviceName. */
        public serviceName: string;

        /** MentionEmailGenerated toEmail. */
        public toEmail: string;

        /** MentionEmailGenerated fromEmail. */
        public fromEmail: string;

        /** MentionEmailGenerated fromName. */
        public fromName: string;

        /** MentionEmailGenerated template. */
        public template: string;

        /** MentionEmailGenerated placeHolders. */
        public placeHolders?: (events.MentionEmailGenerated.IPlaceHolders|null);

        /** MentionEmailGenerated mergeLanguage. */
        public mergeLanguage: string;

        /**
         * Creates a new MentionEmailGenerated instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MentionEmailGenerated instance
         */
        public static create(properties?: events.IMentionEmailGenerated): events.MentionEmailGenerated;

        /**
         * Encodes the specified MentionEmailGenerated message. Does not implicitly {@link events.MentionEmailGenerated.verify|verify} messages.
         * @param message MentionEmailGenerated message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IMentionEmailGenerated, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MentionEmailGenerated message, length delimited. Does not implicitly {@link events.MentionEmailGenerated.verify|verify} messages.
         * @param message MentionEmailGenerated message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IMentionEmailGenerated, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MentionEmailGenerated message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MentionEmailGenerated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionEmailGenerated;

        /**
         * Decodes a MentionEmailGenerated message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MentionEmailGenerated
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionEmailGenerated;

        /**
         * Verifies a MentionEmailGenerated message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MentionEmailGenerated message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MentionEmailGenerated
         */
        public static fromObject(object: { [k: string]: any }): events.MentionEmailGenerated;

        /**
         * Creates a plain object from a MentionEmailGenerated message. Also converts values to other types if specified.
         * @param message MentionEmailGenerated
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.MentionEmailGenerated, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MentionEmailGenerated to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    namespace MentionEmailGenerated {

        /** Properties of a Mention. */
        interface IMention {

            /** Mention trackingUnitName */
            trackingUnitName?: (string|null);

            /** Mention programName */
            programName?: (string|null);

            /** Mention programImage */
            programImage?: (string|null);

            /** Mention mentionDate */
            mentionDate?: (number|Long|null);

            /** Mention snippets */
            snippets?: (string|null);

            /** Mention inviteLink */
            inviteLink?: (string|null);

            /** Mention via */
            via?: (string|null);

            /** Mention logouri */
            logouri?: (string|null);

            /** Mention creatorEmail */
            creatorEmail?: (string|null);

            /** Mention unsubscribeHash */
            unsubscribeHash?: (string|null);

            /** Mention unsubscribeLink */
            unsubscribeLink?: (string|null);
        }

        /** Represents a Mention. */
        class Mention implements IMention {

            /**
             * Constructs a new Mention.
             * @param [properties] Properties to set
             */
            constructor(properties?: events.MentionEmailGenerated.IMention);

            /** Mention trackingUnitName. */
            public trackingUnitName: string;

            /** Mention programName. */
            public programName: string;

            /** Mention programImage. */
            public programImage: string;

            /** Mention mentionDate. */
            public mentionDate: (number|Long);

            /** Mention snippets. */
            public snippets: string;

            /** Mention inviteLink. */
            public inviteLink: string;

            /** Mention via. */
            public via: string;

            /** Mention logouri. */
            public logouri: string;

            /** Mention creatorEmail. */
            public creatorEmail: string;

            /** Mention unsubscribeHash. */
            public unsubscribeHash: string;

            /** Mention unsubscribeLink. */
            public unsubscribeLink: string;

            /**
             * Creates a new Mention instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Mention instance
             */
            public static create(properties?: events.MentionEmailGenerated.IMention): events.MentionEmailGenerated.Mention;

            /**
             * Encodes the specified Mention message. Does not implicitly {@link events.MentionEmailGenerated.Mention.verify|verify} messages.
             * @param message Mention message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: events.MentionEmailGenerated.IMention, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Mention message, length delimited. Does not implicitly {@link events.MentionEmailGenerated.Mention.verify|verify} messages.
             * @param message Mention message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: events.MentionEmailGenerated.IMention, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a Mention message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Mention
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionEmailGenerated.Mention;

            /**
             * Decodes a Mention message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Mention
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionEmailGenerated.Mention;

            /**
             * Verifies a Mention message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a Mention message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Mention
             */
            public static fromObject(object: { [k: string]: any }): events.MentionEmailGenerated.Mention;

            /**
             * Creates a plain object from a Mention message. Also converts values to other types if specified.
             * @param message Mention
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: events.MentionEmailGenerated.Mention, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Mention to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }

        /** Properties of a PlaceHolders. */
        interface IPlaceHolders {

            /** PlaceHolders trackingUnitName */
            trackingUnitName?: (string|null);

            /** PlaceHolders via */
            via?: (string|null);

            /** PlaceHolders logouri */
            logouri?: (string|null);

            /** PlaceHolders mentions */
            mentions?: (events.MentionEmailGenerated.IMention[]|null);
        }

        /** Represents a PlaceHolders. */
        class PlaceHolders implements IPlaceHolders {

            /**
             * Constructs a new PlaceHolders.
             * @param [properties] Properties to set
             */
            constructor(properties?: events.MentionEmailGenerated.IPlaceHolders);

            /** PlaceHolders trackingUnitName. */
            public trackingUnitName: string;

            /** PlaceHolders via. */
            public via: string;

            /** PlaceHolders logouri. */
            public logouri: string;

            /** PlaceHolders mentions. */
            public mentions: events.MentionEmailGenerated.IMention[];

            /**
             * Creates a new PlaceHolders instance using the specified properties.
             * @param [properties] Properties to set
             * @returns PlaceHolders instance
             */
            public static create(properties?: events.MentionEmailGenerated.IPlaceHolders): events.MentionEmailGenerated.PlaceHolders;

            /**
             * Encodes the specified PlaceHolders message. Does not implicitly {@link events.MentionEmailGenerated.PlaceHolders.verify|verify} messages.
             * @param message PlaceHolders message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: events.MentionEmailGenerated.IPlaceHolders, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified PlaceHolders message, length delimited. Does not implicitly {@link events.MentionEmailGenerated.PlaceHolders.verify|verify} messages.
             * @param message PlaceHolders message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: events.MentionEmailGenerated.IPlaceHolders, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes a PlaceHolders message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns PlaceHolders
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.MentionEmailGenerated.PlaceHolders;

            /**
             * Decodes a PlaceHolders message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns PlaceHolders
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.MentionEmailGenerated.PlaceHolders;

            /**
             * Verifies a PlaceHolders message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates a PlaceHolders message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns PlaceHolders
             */
            public static fromObject(object: { [k: string]: any }): events.MentionEmailGenerated.PlaceHolders;

            /**
             * Creates a plain object from a PlaceHolders message. Also converts values to other types if specified.
             * @param message PlaceHolders
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: events.MentionEmailGenerated.PlaceHolders, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this PlaceHolders to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }

    /** Properties of a BasicEmail. */
    interface IBasicEmail {

        /** BasicEmail fromAddress */
        fromAddress?: (string|null);

        /** BasicEmail toAddress */
        toAddress?: (string|null);

        /** BasicEmail subject */
        subject?: (string|null);

        /** BasicEmail body */
        body?: (string|null);

        /** BasicEmail replyTo */
        replyTo?: (string|null);

        /** BasicEmail bodyHtml */
        bodyHtml?: (string|null);
    }

    /** Represents a BasicEmail. */
    class BasicEmail implements IBasicEmail {

        /**
         * Constructs a new BasicEmail.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.IBasicEmail);

        /** BasicEmail fromAddress. */
        public fromAddress: string;

        /** BasicEmail toAddress. */
        public toAddress: string;

        /** BasicEmail subject. */
        public subject: string;

        /** BasicEmail body. */
        public body: string;

        /** BasicEmail replyTo. */
        public replyTo: string;

        /** BasicEmail bodyHtml. */
        public bodyHtml: string;

        /**
         * Creates a new BasicEmail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BasicEmail instance
         */
        public static create(properties?: events.IBasicEmail): events.BasicEmail;

        /**
         * Encodes the specified BasicEmail message. Does not implicitly {@link events.BasicEmail.verify|verify} messages.
         * @param message BasicEmail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.IBasicEmail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BasicEmail message, length delimited. Does not implicitly {@link events.BasicEmail.verify|verify} messages.
         * @param message BasicEmail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.IBasicEmail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BasicEmail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BasicEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.BasicEmail;

        /**
         * Decodes a BasicEmail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BasicEmail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.BasicEmail;

        /**
         * Verifies a BasicEmail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BasicEmail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BasicEmail
         */
        public static fromObject(object: { [k: string]: any }): events.BasicEmail;

        /**
         * Creates a plain object from a BasicEmail message. Also converts values to other types if specified.
         * @param message BasicEmail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.BasicEmail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BasicEmail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SMSNotification. */
    interface ISMSNotification {

        /** SMSNotification fromNumber */
        fromNumber?: (string|null);

        /** SMSNotification toNumber */
        toNumber?: (string|null);

        /** SMSNotification message */
        message?: (string|null);
    }

    /** Represents a SMSNotification. */
    class SMSNotification implements ISMSNotification {

        /**
         * Constructs a new SMSNotification.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.ISMSNotification);

        /** SMSNotification fromNumber. */
        public fromNumber: string;

        /** SMSNotification toNumber. */
        public toNumber: string;

        /** SMSNotification message. */
        public message: string;

        /**
         * Creates a new SMSNotification instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SMSNotification instance
         */
        public static create(properties?: events.ISMSNotification): events.SMSNotification;

        /**
         * Encodes the specified SMSNotification message. Does not implicitly {@link events.SMSNotification.verify|verify} messages.
         * @param message SMSNotification message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.ISMSNotification, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SMSNotification message, length delimited. Does not implicitly {@link events.SMSNotification.verify|verify} messages.
         * @param message SMSNotification message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.ISMSNotification, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SMSNotification message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SMSNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.SMSNotification;

        /**
         * Decodes a SMSNotification message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SMSNotification
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.SMSNotification;

        /**
         * Verifies a SMSNotification message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SMSNotification message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SMSNotification
         */
        public static fromObject(object: { [k: string]: any }): events.SMSNotification;

        /**
         * Creates a plain object from a SMSNotification message. Also converts values to other types if specified.
         * @param message SMSNotification
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.SMSNotification, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SMSNotification to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TriggerCacheRefresh. */
    interface ITriggerCacheRefresh {
    }

    /** Represents a TriggerCacheRefresh. */
    class TriggerCacheRefresh implements ITriggerCacheRefresh {

        /**
         * Constructs a new TriggerCacheRefresh.
         * @param [properties] Properties to set
         */
        constructor(properties?: events.ITriggerCacheRefresh);

        /**
         * Creates a new TriggerCacheRefresh instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TriggerCacheRefresh instance
         */
        public static create(properties?: events.ITriggerCacheRefresh): events.TriggerCacheRefresh;

        /**
         * Encodes the specified TriggerCacheRefresh message. Does not implicitly {@link events.TriggerCacheRefresh.verify|verify} messages.
         * @param message TriggerCacheRefresh message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: events.ITriggerCacheRefresh, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TriggerCacheRefresh message, length delimited. Does not implicitly {@link events.TriggerCacheRefresh.verify|verify} messages.
         * @param message TriggerCacheRefresh message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: events.ITriggerCacheRefresh, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TriggerCacheRefresh message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TriggerCacheRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): events.TriggerCacheRefresh;

        /**
         * Decodes a TriggerCacheRefresh message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TriggerCacheRefresh
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): events.TriggerCacheRefresh;

        /**
         * Verifies a TriggerCacheRefresh message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TriggerCacheRefresh message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TriggerCacheRefresh
         */
        public static fromObject(object: { [k: string]: any }): events.TriggerCacheRefresh;

        /**
         * Creates a plain object from a TriggerCacheRefresh message. Also converts values to other types if specified.
         * @param message TriggerCacheRefresh
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: events.TriggerCacheRefresh, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TriggerCacheRefresh to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace google. */
export namespace google {

    /** Namespace protobuf. */
    namespace protobuf {

        /** Properties of an Any. */
        interface IAny {

            /** Any type_url */
            type_url?: (string|null);

            /** Any value */
            value?: (Uint8Array|null);
        }

        /** Represents an Any. */
        class Any implements IAny {

            /**
             * Constructs a new Any.
             * @param [properties] Properties to set
             */
            constructor(properties?: google.protobuf.IAny);

            /** Any type_url. */
            public type_url: string;

            /** Any value. */
            public value: Uint8Array;

            /**
             * Creates a new Any instance using the specified properties.
             * @param [properties] Properties to set
             * @returns Any instance
             */
            public static create(properties?: google.protobuf.IAny): google.protobuf.Any;

            /**
             * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encode(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
             * @param message Any message or plain object to encode
             * @param [writer] Writer to encode to
             * @returns Writer
             */
            public static encodeDelimited(message: google.protobuf.IAny, writer?: $protobuf.Writer): $protobuf.Writer;

            /**
             * Decodes an Any message from the specified reader or buffer.
             * @param reader Reader or buffer to decode from
             * @param [length] Message length if known beforehand
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): google.protobuf.Any;

            /**
             * Decodes an Any message from the specified reader or buffer, length delimited.
             * @param reader Reader or buffer to decode from
             * @returns Any
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): google.protobuf.Any;

            /**
             * Verifies an Any message.
             * @param message Plain object to verify
             * @returns `null` if valid, otherwise the reason why it is not
             */
            public static verify(message: { [k: string]: any }): (string|null);

            /**
             * Creates an Any message from a plain object. Also converts values to their respective internal types.
             * @param object Plain object
             * @returns Any
             */
            public static fromObject(object: { [k: string]: any }): google.protobuf.Any;

            /**
             * Creates a plain object from an Any message. Also converts values to other types if specified.
             * @param message Any
             * @param [options] Conversion options
             * @returns Plain object
             */
            public static toObject(message: google.protobuf.Any, options?: $protobuf.IConversionOptions): { [k: string]: any };

            /**
             * Converts this Any to JSON.
             * @returns JSON object
             */
            public toJSON(): { [k: string]: any };
        }
    }
}
