// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events/core.proto

package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Core payload that allows event routing, instrumentation, and tracing
type Core struct {
	// UUID of the event
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// the event name, should be automatically
	Event string `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	// the topic name
	Topic string `protobuf:"bytes,4,opt,name=topic" json:"topic,omitempty"`
	// timestamp when message is created in RFC2822 format
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Core) Reset()         { *m = Core{} }
func (m *Core) String() string { return proto.CompactTextString(m) }
func (*Core) ProtoMessage()    {}
func (*Core) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_8f8139077b6d38bb, []int{0}
}
func (m *Core) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Core.Unmarshal(m, b)
}
func (m *Core) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Core.Marshal(b, m, deterministic)
}
func (dst *Core) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Core.Merge(dst, src)
}
func (m *Core) XXX_Size() int {
	return xxx_messageInfo_Core.Size(m)
}
func (m *Core) XXX_DiscardUnknown() {
	xxx_messageInfo_Core.DiscardUnknown(m)
}

var xxx_messageInfo_Core proto.InternalMessageInfo

func (m *Core) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Core) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Core) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Core) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Trace struct {
	// Trace context, serialized by JaegerTextMapper
	Trace                string   `protobuf:"bytes,1,opt,name=trace" json:"trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trace) Reset()         { *m = Trace{} }
func (m *Trace) String() string { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()    {}
func (*Trace) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_8f8139077b6d38bb, []int{1}
}
func (m *Trace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trace.Unmarshal(m, b)
}
func (m *Trace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trace.Marshal(b, m, deterministic)
}
func (dst *Trace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trace.Merge(dst, src)
}
func (m *Trace) XXX_Size() int {
	return xxx_messageInfo_Trace.Size(m)
}
func (m *Trace) XXX_DiscardUnknown() {
	xxx_messageInfo_Trace.DiscardUnknown(m)
}

var xxx_messageInfo_Trace proto.InternalMessageInfo

func (m *Trace) GetTrace() string {
	if m != nil {
		return m.Trace
	}
	return ""
}

// Event is an experiment to dynamically embed arbitrary payload under {data}
type Event struct {
	Core                 *Core    `protobuf:"bytes,1,opt,name=core" json:"core,omitempty"`
	Trace                *Trace   `protobuf:"bytes,2,opt,name=trace" json:"trace,omitempty"`
	Data                 *any.Any `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_core_8f8139077b6d38bb, []int{2}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetCore() *Core {
	if m != nil {
		return m.Core
	}
	return nil
}

func (m *Event) GetTrace() *Trace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *Event) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Core)(nil), "events.Core")
	proto.RegisterType((*Trace)(nil), "events.Trace")
	proto.RegisterType((*Event)(nil), "events.Event")
}

func init() { proto.RegisterFile("events/core.proto", fileDescriptor_core_8f8139077b6d38bb) }

var fileDescriptor_core_8f8139077b6d38bb = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xcd, 0x4e, 0x85, 0x30,
	0x10, 0x85, 0x43, 0x6f, 0x7b, 0x23, 0xe3, 0x4f, 0x62, 0xc3, 0xa2, 0x1a, 0x4d, 0x08, 0x6e, 0x58,
	0x95, 0x44, 0x9f, 0x40, 0x8d, 0x2f, 0xd0, 0xb8, 0x72, 0x65, 0x81, 0x4a, 0x9a, 0x08, 0x25, 0xa5,
	0x1a, 0x79, 0x7b, 0xd3, 0x29, 0xe4, 0xee, 0x98, 0xef, 0x9c, 0x39, 0x9c, 0x29, 0x5c, 0x9b, 0x5f,
	0x33, 0x85, 0xa5, 0xe9, 0x9c, 0x37, 0x72, 0xf6, 0x2e, 0x38, 0x7e, 0x4c, 0xe8, 0xf6, 0x66, 0x70,
	0x6e, 0xf8, 0x36, 0x0d, 0xd2, 0xf6, 0xe7, 0xab, 0xd1, 0xd3, 0x9a, 0x2c, 0xd5, 0x27, 0xd0, 0x57,
	0xe7, 0x0d, 0xbf, 0x02, 0x62, 0x7b, 0x91, 0x95, 0x59, 0x9d, 0x2b, 0x62, 0x7b, 0x5e, 0x00, 0xc3,
	0x65, 0x41, 0x10, 0xa5, 0x21, 0xd2, 0xe0, 0x66, 0xdb, 0x09, 0x9a, 0x28, 0x0e, 0xfc, 0x0e, 0xf2,
	0x60, 0x47, 0xb3, 0x04, 0x3d, 0xce, 0x82, 0x95, 0x59, 0x7d, 0x50, 0x27, 0x50, 0xdd, 0x03, 0x7b,
	0xf7, 0xba, 0x33, 0xb8, 0x1c, 0x3f, 0xb6, 0xbf, 0xa4, 0xa1, 0xfa, 0x03, 0xf6, 0x86, 0xd9, 0x25,
	0xd0, 0x58, 0x1d, 0xd5, 0xf3, 0xc7, 0x0b, 0x99, 0xba, 0xcb, 0xd8, 0x4e, 0xa1, 0xc2, 0x1f, 0xf6,
	0x00, 0x82, 0x96, 0xcb, 0xdd, 0x82, 0xf1, 0x5b, 0x1e, 0xaf, 0x81, 0xf6, 0x3a, 0x68, 0x71, 0x40,
	0x4f, 0x21, 0xd3, 0xe9, 0x72, 0x3f, 0x5d, 0x3e, 0x4f, 0xab, 0x42, 0xc7, 0xcb, 0xd9, 0xc7, 0xf6,
	0x3e, 0xed, 0x11, 0xd5, 0xa7, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0xca, 0xeb, 0xd4, 0xb1, 0x43,
	0x01, 0x00, 0x00,
}
