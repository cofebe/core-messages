// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events/core.proto

package events

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Core struct {
	//*
	//Read-only and auto-generated. ID of the message, ID is a uuid v4 auto-generated by messaging library.
	//It will be propagate through the system. Similar to correlationId
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//* The name of the event is
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Read-only and auto-generated. Messaging library will compute the timestamp in RFC1123Z when a message is produced.
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// the type of the event
	Type string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Messaging library will default to value from `hostname` if not set */
	ServiceName string `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Application Id which owns the event. For internal components, it should be set to "system"
	ApplicationId string `protobuf:"bytes,6,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// The event id that matches with event_id in Event Registry Table
	EventId string `protobuf:"bytes,7,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// The organization where event is generated
	OrganizationId string `protobuf:"bytes,8,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// The user who owns the event
	UserId string `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The API token used to generate the event
	TokenId              string   `protobuf:"bytes,10,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Core) Reset()         { *m = Core{} }
func (m *Core) String() string { return proto.CompactTextString(m) }
func (*Core) ProtoMessage()    {}
func (*Core) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ad26f178df7ed1, []int{0}
}

func (m *Core) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Core.Unmarshal(m, b)
}
func (m *Core) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Core.Marshal(b, m, deterministic)
}
func (m *Core) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Core.Merge(m, src)
}
func (m *Core) XXX_Size() int {
	return xxx_messageInfo_Core.Size(m)
}
func (m *Core) XXX_DiscardUnknown() {
	xxx_messageInfo_Core.DiscardUnknown(m)
}

var xxx_messageInfo_Core proto.InternalMessageInfo

func (m *Core) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Core) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Core) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *Core) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Core) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Core) GetApplicationId() string {
	if m != nil {
		return m.ApplicationId
	}
	return ""
}

func (m *Core) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *Core) GetOrganizationId() string {
	if m != nil {
		return m.OrganizationId
	}
	return ""
}

func (m *Core) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Core) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

type Trace struct {
	//*
	//Open Tracing trace context.
	TraceContext map[string]string `protobuf:"bytes,1,rep,name=trace_context,json=traceContext,proto3" json:"trace_context,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//*
	//Open Tracing trace context.
	TraceTags            map[string]string `protobuf:"bytes,2,rep,name=trace_tags,json=traceTags,proto3" json:"trace_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ServiceName          string            `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Trace) Reset()         { *m = Trace{} }
func (m *Trace) String() string { return proto.CompactTextString(m) }
func (*Trace) ProtoMessage()    {}
func (*Trace) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ad26f178df7ed1, []int{1}
}

func (m *Trace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trace.Unmarshal(m, b)
}
func (m *Trace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trace.Marshal(b, m, deterministic)
}
func (m *Trace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trace.Merge(m, src)
}
func (m *Trace) XXX_Size() int {
	return xxx_messageInfo_Trace.Size(m)
}
func (m *Trace) XXX_DiscardUnknown() {
	xxx_messageInfo_Trace.DiscardUnknown(m)
}

var xxx_messageInfo_Trace proto.InternalMessageInfo

func (m *Trace) GetTraceContext() map[string]string {
	if m != nil {
		return m.TraceContext
	}
	return nil
}

func (m *Trace) GetTraceTags() map[string]string {
	if m != nil {
		return m.TraceTags
	}
	return nil
}

func (m *Trace) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type VtEvent struct {
	Core                 *Core             `protobuf:"bytes,1,opt,name=core,proto3" json:"core,omitempty"`
	Trace                *Trace            `protobuf:"bytes,2,opt,name=trace,proto3" json:"trace,omitempty"`
	Baggage              map[string]string `protobuf:"bytes,3,rep,name=baggage,proto3" json:"baggage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data                 *any.Any          `protobuf:"bytes,15,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *VtEvent) Reset()         { *m = VtEvent{} }
func (m *VtEvent) String() string { return proto.CompactTextString(m) }
func (*VtEvent) ProtoMessage()    {}
func (*VtEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_42ad26f178df7ed1, []int{2}
}

func (m *VtEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VtEvent.Unmarshal(m, b)
}
func (m *VtEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VtEvent.Marshal(b, m, deterministic)
}
func (m *VtEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VtEvent.Merge(m, src)
}
func (m *VtEvent) XXX_Size() int {
	return xxx_messageInfo_VtEvent.Size(m)
}
func (m *VtEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_VtEvent.DiscardUnknown(m)
}

var xxx_messageInfo_VtEvent proto.InternalMessageInfo

func (m *VtEvent) GetCore() *Core {
	if m != nil {
		return m.Core
	}
	return nil
}

func (m *VtEvent) GetTrace() *Trace {
	if m != nil {
		return m.Trace
	}
	return nil
}

func (m *VtEvent) GetBaggage() map[string]string {
	if m != nil {
		return m.Baggage
	}
	return nil
}

func (m *VtEvent) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Core)(nil), "events.Core")
	proto.RegisterType((*Trace)(nil), "events.Trace")
	proto.RegisterMapType((map[string]string)(nil), "events.Trace.TraceContextEntry")
	proto.RegisterMapType((map[string]string)(nil), "events.Trace.TraceTagsEntry")
	proto.RegisterType((*VtEvent)(nil), "events.VtEvent")
	proto.RegisterMapType((map[string]string)(nil), "events.VtEvent.BaggageEntry")
}

func init() { proto.RegisterFile("events/core.proto", fileDescriptor_42ad26f178df7ed1) }

var fileDescriptor_42ad26f178df7ed1 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x1d, 0x27, 0x4e, 0x26, 0x3f, 0xa5, 0xa3, 0x4a, 0xb8, 0x51, 0x25, 0x42, 0x10, 0x22,
	0x27, 0x47, 0x0a, 0x12, 0x42, 0x05, 0x09, 0xd1, 0xd2, 0x43, 0x2e, 0x1c, 0xac, 0x8a, 0x03, 0x97,
	0x68, 0x63, 0x2f, 0x96, 0xd5, 0xc4, 0x6b, 0xad, 0x27, 0x11, 0xe6, 0x61, 0x78, 0x02, 0x9e, 0x8d,
	0x67, 0x40, 0x3b, 0x1b, 0x83, 0xa3, 0x70, 0xe9, 0xc5, 0x9a, 0xf9, 0xe6, 0x9b, 0xcf, 0x3b, 0xdf,
	0xee, 0xc0, 0xb9, 0xdc, 0xcb, 0x9c, 0xca, 0x79, 0xac, 0xb4, 0x0c, 0x0b, 0xad, 0x48, 0x61, 0xc7,
	0x42, 0xe3, 0xcb, 0x54, 0xa9, 0x74, 0x23, 0xe7, 0x8c, 0xae, 0x77, 0xdf, 0xe6, 0x22, 0xaf, 0x2c,
	0x65, 0xfa, 0xd3, 0x05, 0xef, 0x56, 0x69, 0x89, 0x23, 0x70, 0xb3, 0x24, 0x70, 0x26, 0xce, 0xac,
	0x17, 0xb9, 0x59, 0x82, 0x08, 0x5e, 0x2e, 0xb6, 0x32, 0x70, 0x19, 0xe1, 0x18, 0xaf, 0xa0, 0x47,
	0xd9, 0x56, 0x96, 0x24, 0xb6, 0x45, 0xd0, 0xe2, 0xc2, 0x3f, 0xc0, 0x74, 0x50, 0x55, 0xc8, 0xc0,
	0xb3, 0x1d, 0x26, 0xc6, 0xe7, 0x30, 0x28, 0xa5, 0xde, 0x67, 0xb1, 0x5c, 0xb1, 0x5a, 0x9b, 0x6b,
	0xfd, 0x03, 0xf6, 0xd9, 0x88, 0xbe, 0x84, 0x91, 0x28, 0x8a, 0x4d, 0x16, 0x0b, 0xca, 0x54, 0xbe,
	0xca, 0x92, 0xa0, 0xc3, 0xa4, 0x61, 0x03, 0x5d, 0x26, 0x78, 0x09, 0x5d, 0x9e, 0xc6, 0x10, 0x7c,
	0x26, 0xf8, 0x9c, 0x2f, 0x13, 0x7c, 0x05, 0x67, 0x4a, 0xa7, 0x22, 0xcf, 0x7e, 0xfc, 0x95, 0xe8,
	0x32, 0x63, 0xd4, 0x84, 0x97, 0x09, 0x3e, 0x05, 0x7f, 0x57, 0x4a, 0x6d, 0x08, 0x3d, 0x26, 0x74,
	0x4c, 0x6a, 0xc5, 0x49, 0x3d, 0x48, 0x6e, 0x05, 0x2b, 0xce, 0xf9, 0x32, 0x99, 0xfe, 0x72, 0xa1,
	0x7d, 0xaf, 0x45, 0x2c, 0xf1, 0x13, 0x0c, 0xc9, 0x04, 0xab, 0x58, 0xe5, 0x24, 0xbf, 0x53, 0xe0,
	0x4c, 0x5a, 0xb3, 0xfe, 0xe2, 0x59, 0x68, 0x5d, 0x0e, 0x99, 0x65, 0xbf, 0xb7, 0x96, 0x71, 0x97,
	0x93, 0xae, 0xa2, 0x01, 0x35, 0x20, 0x7c, 0x07, 0x60, 0x55, 0x48, 0xa4, 0x65, 0xe0, 0xb2, 0xc4,
	0xd5, 0x7f, 0x24, 0xee, 0x45, 0x5a, 0xda, 0xfe, 0x1e, 0xd5, 0xf9, 0x89, 0x9d, 0xad, 0x13, 0x3b,
	0xc7, 0x1f, 0xe0, 0xfc, 0xe4, 0x08, 0xf8, 0x04, 0x5a, 0x0f, 0xb2, 0x3a, 0xdc, 0xae, 0x09, 0xf1,
	0x02, 0xda, 0x7b, 0xb1, 0xd9, 0xd5, 0xf7, 0x6b, 0x93, 0x6b, 0xf7, 0xad, 0x33, 0x7e, 0x0f, 0xa3,
	0xe3, 0x03, 0x3c, 0xa6, 0x7b, 0xfa, 0xdb, 0x01, 0xff, 0x0b, 0xdd, 0x99, 0x71, 0x70, 0x02, 0x9e,
	0x79, 0x8c, 0xdc, 0xd8, 0x5f, 0x0c, 0xea, 0x21, 0xcd, 0x73, 0x8b, 0xb8, 0x82, 0x2f, 0xa0, 0xcd,
	0xc3, 0xb1, 0x4e, 0x7f, 0x31, 0x3c, 0xf2, 0x21, 0xb2, 0x35, 0x7c, 0x03, 0xfe, 0x5a, 0xa4, 0xa9,
	0x48, 0xcd, 0xbc, 0x47, 0x76, 0x1d, 0x7e, 0x14, 0xde, 0xd8, 0xb2, 0xb5, 0xab, 0x26, 0xe3, 0x0c,
	0xbc, 0x44, 0x90, 0x08, 0xce, 0x58, 0xfb, 0x22, 0xb4, 0x4b, 0x10, 0xd6, 0x4b, 0x10, 0x7e, 0xcc,
	0xab, 0x88, 0x19, 0xe3, 0x6b, 0x18, 0x34, 0x25, 0x1e, 0x33, 0xf0, 0x4d, 0xf7, 0xeb, 0x61, 0xcb,
	0xd6, 0x1d, 0x56, 0x7e, 0xfd, 0x27, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xfd, 0x63, 0x16, 0x89, 0x03,
	0x00, 0x00,
}
